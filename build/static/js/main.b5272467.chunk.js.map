{"version":3,"sources":["components/apis/youtube.js","components/SearchBar.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","params","part","maxResults","key","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","onInputChange","bind","assertThisInitialized","onFormSubmit","event","setState","target","value","preventDefault","onTermSubmit","react_default","a","createElement","className","onSubmit","type","onChange","React","Component","VideoItem","_ref","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","videoItem","map","src_components_VideoItem","VideoDetail","videoSrc","concat","id","videoId","description","App","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","youtube","get","q","sent","data","items","selectedVideo","stop","_x","apply","arguments","components_SearchBar","components_VideoDetail","components_VideoList","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5272467.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst KEY = 'AIzaSyAjCQnRXHPTpAGsOAkDE_YQIMEnMNku5ew';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://www.googleapis.com/youtube/v3',\r\n  params: {\r\n    part: 'snippet',\r\n    maxResults: 5,\r\n    key: KEY\r\n  }\r\n})","import React from 'react';\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state= {\r\n\t\t\tterm: ''\r\n\t\t}\r\n\r\n\t\tthis.onInputChange = this.onInputChange.bind(this);\r\n\t\tthis.onFormSubmit = this.onFormSubmit.bind(this);\r\n\t}\r\n\r\n\tonInputChange(event) {\r\n\t\tthis.setState({\r\n\t\t\tterm: event.target.value\r\n\t\t})\r\n\t}\r\n \r\n\tonFormSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onTermSubmit(this.state.term);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"ui segment\">\r\n\t\t\t\t<form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n\t\t\t\t\t<div className=\"ui field\">\r\n\t\t\t\t\t\t<label> Search Video </label>\r\n\t\t\t\t\t\t<input type=\"text\" value={this.state.term} onChange ={this.onInputChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './VideoItem.css';\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n  return(\r\n    <div onClick={ () => onVideoSelect(video) } className=\"item video-item\">\r\n      <img className=\"ui image\" alt={video.snippet.title} src={video.snippet.thumbnails.medium.url} />\r\n      <div className=\"content\">\r\n        <div className=\"header\"> {video.snippet.title} </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n\r\n  const videoItem = videos.map(video => {\r\n    return <VideoItem key={video.snippet.title} onVideoSelect={onVideoSelect} video={video}/>\r\n  });\r\n\r\n  return(\r\n    <div className=\"ui relaxed list divided\"> { videoItem }  </div>\r\n  );\r\n}\r\n\r\nexport default VideoList;","import React from 'react';\r\n\r\nconst VideoDetail = ({ video }) => {\r\n\r\n    if (!video) {\r\n        return <div>Loading</div>\r\n    }\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ui embed\">\r\n                <iframe title='Video Player' src={ videoSrc }/>\r\n            </div>\r\n            <div className=\"ui segment\">\r\n                <h4 className=\"ui header\">{ video.snippet.title }</h4>\r\n                <p>{ video.snippet.description }</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoDetail;","import React, { Component } from 'react';\r\nimport youtube from './apis/youtube';\r\nimport SearchBar from './SearchBar';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      videos: [],\r\n      selectedVideo: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.onTermSubmit('KGF movie')\r\n  }\r\n   \r\n  onTermSubmit = async (term) => {\r\n    const response = await youtube.get('/search', {\r\n      params: {\r\n        q: term\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      videos: response.data.items,\r\n      selectedVideo: response.data.items[0]\r\n    })\r\n  }\r\n\r\n  onVideoSelect = (video) => {\r\n    this.setState({\r\n      selectedVideo: video,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <SearchBar onTermSubmit={this.onTermSubmit} />\r\n\r\n        <div className=\"ui grid\">\r\n          <div className=\"ui row\">\r\n            <div className=\"eleven wide column\">\r\n              <VideoDetail video={this.state.selectedVideo} />\r\n            </div>\r\n            <div className=\"five wide column\">\r\n              <VideoList onVideoSelect={this.onVideoSelect} videos={this.state.videos} /> \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}